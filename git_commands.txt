git status
git checkout main
git pull origin main
git branch -d <branch name> #Simple delete if branches have been merged
git branch -D <branch name> #Force delete
git add .\git_commands.txt
git commit -m "Comment"
git push -u -f origin main #Pushes the changes from your local repository to the remote repository.
git push origin main #To push changes from your local Git repository to a remote repository

Once you're in the repository, pull the latest changes from the remote (usually origin) and the branch you're working on 
(for example, main):

git pull origin main
This command fetches and integrates the latest changes from the remote repositoryâ€™s main branch into your local repository.

If you're working on another branch (e.g., dev), you can specify that branch:

git pull origin dev
3. Ensure you're on the correct branch:
If you're unsure which branch you're on, you can check with:

git branch
This will show a list of branches, with an asterisk (*) indicating the currently active branch. 
If needed, switch to the correct branch using:


git checkout <branch_name>
Then pull the latest changes for that branch.
To create a new branch in Git and switch to it, you can use the following command:
git checkout -b <branch_name>
checkout -b: This creates a new branch and switches to it immediately.
to create a branch called feature-xyz:
git checkout -b feature-xyz

Pushing the New Branch to GitHub. After creating the branch locally, you will typically want to push it to GitHub. 
To do that, use:
git push -u origin <branch_name>
For example:
git push -u origin feature-xyz
The -u flag sets the upstream reference, so future pushes and pulls on this branch can be done without 
specifying the remote and branch name.
